package dao;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import bean.MediaBean;


public class MediaDAO extends DAO{


//メディア情報検索　タイトルのみ部分一致

	public List<MediaBean> search1 (String title) throws Exception {
			List<MediaBean> list = new ArrayList<MediaBean> ();
			Connection con = getConnection();

			//消されてない（med_delete=1)ことを確認しつつタイトルを検索
			PreparedStatement st = con.prepareStatement("select * from media where med_title like ?");

			//PreparedStatement st = con.prepareStatement("select * from media where med_delete = 0 AND med_title like ?");


		try {
				st.setString(1, "%" + title + "%");
				ResultSet rs = st.executeQuery ();
				while (rs.next()) {
					MediaBean mb = new MediaBean();
					mb.setmedCode(rs.getInt("med_code")); //メディアのコード
					mb.setmedTitle(rs.getString("med_title")); //タイトル
					mb.setmedlmage(rs.getBytes("med_image")); //画像
					mb.setmedMedia(rs.getString("med_media")); //CDとかDVDとか
					mb.setmedInfo(rs.getString("med_info")); //メディアの説明文
					mb.setmedRelease(rs.getString("med_release")); //発売日

					mb.setmedGenre1(rs.getString("med_genre1")); //ジャンル１
					mb.setmedGenre2(rs.getString("med_genre2")); //ジャンル２

					//mb.setmedGenre1(rs.getInt("med_genre1")); //ジャンル１
					//mb.setmedGenre2(rs.getInt("med_genre2")); //ジャンル２
					list.add(mb);
				}

		}catch (Exception e) {
			throw e;
		}finally{
			st.close();
			con.close();
		}
			return list;
	}


		//ジャンルとタイトルで検索（ジャンルは完全一致？）
	public List<MediaBean> search2 (String title, String genre1,String genre2) throws Exception{
		List<MediaBean> list = new ArrayList<MediaBean> ();
		Connection con = getConnection();
		PreparedStatement st = con.prepareStatement(

	    //削除機能にmeDelete使うときはこれ med_delete=1をチェックした上で
		"SELECT * FROM media WHERE med_genre1 = ? AND med_genre2 = ? AND title LIKE ?)");
	//"SELECT * FROM media WHERE med_delete = 0 AND med_genre1 = ? AND med_genre2 = ? AND title LIKE ?)");


		try {
			st.setString(1, genre1); //邦画洋画アニメ
			st.setString(2, genre2); //ストーリージャンル
			st.setString(4, "%" + title +"%"); //タイトル部分一致
			ResultSet rs = st.executeQuery();
				while (rs.next()) {
					MediaBean mb = new MediaBean();
					mb.setmedCode(rs.getInt("med_code")); //メディアのコード
					mb.setmedTitle(rs.getString("med_title")); //タイトル
					mb.setmedlmage(rs.getBytes("med_image")); //画像
					mb.setmedMedia(rs.getString("med_media")); //CDとかDVDとか
					mb.setmedInfo(rs.getString("med_info")); //メディアの説明文
					mb.setmedRelease(rs.getString("med_release")); //発売日


					mb.setmedGenre1(rs.getString("med_genre1")); //ジャンル１
					mb.setmedGenre2(rs.getString("med_genre2")); //ジャンル２
					//mb.setmedGenre1(rs.getInt("med_genre1")); //ジャンル１
					//mb.setmedGenre2(rs.getInt("med_genre2")); //ジャンル２

					list.add(mb);
				}
			}catch (Exception e) {
				throw e;
			}finally {

				st.close();
				con.close();
			}
		return list;
	}


		//ジャンルのみ検索（どっちか？部分？）
			public List<MediaBean> search3 (String genre1, String genre2) throws Exception {
				List<MediaBean> list = new ArrayList<MediaBean> ();
					Connection con = getConnection();
					PreparedStatement st = con. prepareStatement(
							//ジャンル一致を確認しているが…
				"SELECT * FROM media WHERE (med_genre1 = ? OR med_genre2 = ?)");
				//"SELECT * FROM media WHERE med_delete = 0 AND  (med_genre1 = ? OR med_genre2 = ?)");
					try {
						st.setString(1, genre1);
						st.setString(2, genre2);
						ResultSet rs = st.executeQuery ();
							while (rs.next()) {
								MediaBean mb = new MediaBean();
								mb.setmedCode(rs.getInt("med_code")); //メディアのコード
								mb.setmedTitle(rs.getString("med_title")); //タイトル
								mb.setmedlmage(rs.getBytes("med_image")); //画像
								mb.setmedMedia(rs.getString("med_media")); //CDとかDVDとか
								mb.setmedInfo(rs.getString("med_info")); //メディアの説明文
								mb.setmedRelease(rs.getString("med_release")); //発売日


								mb.setmedGenre1(rs.getString("med_genre1")); //ジャンル１
								mb.setmedGenre2(rs.getString("med_genre2")); //ジャンル２
								//mb.setmedGenre1(rs.getInt("med_genre1")); //ジャンル１
								//mb.setmedGenre2(rs.getInt("med_genre2")); //ジャンル２
								list.add(mb);
							}
					}catch (Exception e) {

						throw e;
					}finally {
						st.close();
						con.close();
					}

					return list;
		}

//メディア新規登録
		public int register(MediaBean mb) throws Exception {
				int line = 0;
				Connection con = getConnection();
				PreparedStatement st = con.prepareStatement(
						"INSERT INTO media(med_Code,med_title,med_image, med_media, med_info, med_release, med_genle1, med_genle2,med_delete,med_date) VALUES(NULL, ?, ?, ?, ?, ?, ?, ?, ? ,1,now()");

			try {
				//st.setBinaryStream(1, new ByteArrayInputStream(mb.getmedlmage()));
				//↓エラー回避で名前のデータがくるような感じにしてるけどどういう処理だ？
				st.setString (1, mb.getmedTitle());//タイトル
				st.setString(2, mb.getmedDate());//画像
				st.setString(3, mb.getmedMedia());  //DVDとかBDとか
				st.setString(4, mb.getmedInfo());  //あらすじ
				st.setString(5, mb.getmedRelease());  //発売日


				st.setString(6, mb.getmedGenre1());  //ジャンル１（表現方法）
				st.setString(7, mb.getmedGenre2());  //ジャンル２（話）
				//st.setInt(6, mb.getmedGenre1());  //ジャンル１（表現方法）
				//st.setInt(7, mb.getmedGenre2());  //ジャンル２（話）
				line = st.executeUpdate();
			}
			catch (Exception e) {
						e.printStackTrace();
					}finally {
						st.close();
						con.close();
					}
					return line;
			}


//メディア消去
			public int delete(MediaBean mb3) throws Exception {

				int line = 0;

				Connection con = getConnection();
				PreparedStatement st = con.prepareStatement(
//						 "UPDATE media SET med_delete =1 WHERE meCode=?"); //meDeleteに１入れてる（完全消去しないで運用）
						"DELETE FROM media WHERE med_code=?"); //データベースからメディアコードが合致した行を削除しちゃう
				try {
					st.setInt(1, mb3.getmedCode());
					line = st.executeUpdate();
				}catch (Exception e) {
					e.printStackTrace();
				}finally {
					st.close();
					con.close();
				}
				return line;
			}
//メディア登録　　intじゃなくてそのまま登録させようぜ
			public List<MediaBean> create (String med_Code) throws Exception {
				List<MediaBean> list = new ArrayList<MediaBean>();
				Connection con = getConnection();
				PreparedStatement st = con.prepareStatement(

						//あとで
						"SELECT * FROM media AS M INNER JOIN media AS G ON M.gecode =G.gecode WHERE mecode = ?");
				try {
					st.setNString(1, med_Code);
					ResultSet rs = st.executeQuery();
					while (rs.next()) {
						MediaBean mb = new MediaBean();

						//mb.setMeImageBase64(Base64.getEncoder().encodeToString(rs.getBytes("meImage")));
						mb.setmedCode(rs.getInt("med_code")); //メディアのコード
						mb.setmedTitle(rs.getString("med_title")); //タイトル
						mb.setmedlmage(rs.getBytes("med_image")); //画像
						mb.setmedMedia(rs.getString("med_media")); //CDとかDVDとか
						mb.setmedInfo(rs.getString("med_info")); //メディアの説明文
						mb.setmedRelease(rs.getString("med_release")); //発売日


						mb.setmedGenre1(rs.getString("med_genre1")); //ジャンル１
						mb.setmedGenre2(rs.getString("med_genre2")); //ジャンル２
						//mb.setmedGenre1(rs.getInt("med_genre1")); //ジャンル１
						//mb.setmedGenre2(rs.getInt("med_genre2")); //ジャンル２

						int geCode2 = rs.getInt("medgenre1");
						int geCode3 = rs.getInt("medgenre2");
						String medGenre11="";
						switch(geCode2){
							case 1:medGenre11="洋画（実写）";
									break;
							case 2:medGenre11="邦画（実写）";
									break;
							case 3:medGenre11 ="アニメ";
									break;
							case 4:medGenre11="その他";
									break;

						}
						String medGenre22="";
						switch(geCode3){
						case 1:medGenre22="アクション";
								break;
						case 2:medGenre22="アニメ";
							break;
						case 3:medGenre22 ="コメディ";
							break;
						case 4:medGenre22="時代劇";
							break;
						case 5:medGenre22="成人";
							break;
						case 6:medGenre22="スポーツ";
							break;
						case 7:medGenre22="ドキュメンタリー";
							break;
						case 8:medGenre22="ノンフィクション";
							break;
						case 9:medGenre22 ="ファンタジー";
							break;
						case 10:medGenre22="ファミリー";
							break;
						case 11:medGenre22="ホラー";
							break;
						case 12:medGenre22="ミステリー";
							break;
						case 13:medGenre22="ミュージカル";
							break;
						case 14:medGenre22="恋愛";
							break;
						case 15:medGenre22="歷史";
							break;
						case 16:medGenre22= "SF";
							break;
						}
						mb.setmedGenre11(medGenre11);
						mb.setmedGenre22(medGenre22);
						list.add(mb);
					}
				}
					catch (Exception e) {
						throw e;
					}	finally {

					st.close();
					con. setAutoCommit(true);
					con.close();
					}
				return list;

			}
}
